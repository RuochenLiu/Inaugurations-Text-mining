library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
library("NLP")
library("openNLP")
source("../lib/plotstacked.R")
source("../lib/speechFuncs.R")
### Inauguaral speeches
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
speech.url=f.speechlinks(main.page)
#head(inaug)
as.Date(speech.url[,1], format="%B %e, %Y")
speech.url=speech.url[-nrow(speech.url),] # remove the last line, irrelevant due to error.
speech.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
speech.list=cbind(speech.list, speech.url)
# Loop over each row in speech.list
speech.list$fulltext=NA
for(i in seq(nrow(speech.list))) {
text <- read_html(speech.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>% # isloate the text
html_text() # get the text
speech.list$fulltext[i]=text
# Create the file name
filename <- paste0("../data/fulltext/",
speech.list$type[i],
speech.list$File[i], "-",
speech.list$Term[i], ".txt")
sink(file = filename) %>% # open file to write
cat(text)  # write the file
sink() # close the file
}
speech.list <- speech.list[,c(-2,-5,-7,-9)]
colnames(speech.list)[1] <- "President"
colnames(speech.list)[5] <- "Date"
library("ggplot2")
View(speech.list)
library("ggplot2")
library("plyr")
library("rvest")
library("tibble")
library("qdap")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RANN")
library("tm")
library("NLP")
library("openNLP")
source("../lib/plotstacked.R")
source("../lib/speechFuncs.R")
### Inauguaral speeches
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
speech.url=f.speechlinks(main.page)
#head(inaug)
as.Date(speech.url[,1], format="%B %e, %Y")
speech.url=speech.url[-nrow(speech.url),] # remove the last line, irrelevant due to error.
speech.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
speech.list=cbind(speech.list, speech.url)
# Loop over each row in speech.list
speech.list$fulltext=NA
for(i in seq(nrow(speech.list))) {
text <- read_html(speech.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>% # isloate the text
html_text() # get the text
speech.list$fulltext[i]=text
# Create the file name
filename <- paste0("../data/fulltext/",
speech.list$type[i],
speech.list$File[i], "-",
speech.list$Term[i], ".txt")
sink(file = filename) %>% # open file to write
cat(text)  # write the file
sink() # close the file
}
speech.list <- speech.list[,c(-2,-5,-7,-9)]
colnames(speech.list)[1] <- "President"
colnames(speech.list)[5] <- "Date"
sentence.list=NULL
for(i in 1:nrow(speech.list)){
sentences=sent_detect(speech.list$fulltext[i],
endmarks = c("?", ".", "!", "|",";"))
if(length(sentences)>0){
word.count=word_count(sentences)
sentence.list=rbind(sentence.list,
cbind(speech.list[i,-ncol(speech.list)],
sentences=as.character(sentences),
word.count,
sent.id=1:length(sentences)
)
)
}
}
sentence.list <-  sentence.list %>% filter(!is.na(word.count))
# Combine president name and term.
nms.pre <- paste(speech.list$President, speech.list$Term, sep = "-Term")
lexical.rate <- function(s){
t <- vector("numeric", length(s))
for(i in 1:length(t)){
t[i] <-  lexical_classification(s[i])[[4]]$ave.content.rate/100
}
return(t)
}
lexical.num <- function(s){
t <- vector("numeric", length(s))
for(i in 1:length(t)){
t[i] <-  lexical_classification(s[i])[[4]]$n.content
}
return(t)
}
# Get the number and rate of content words for each sentences.
sentence.list$content.rate <- lexical.rate(sentence.list$sentences)
sentence.list$content.num <- lexical.num(sentence.list$sentences)
# Get the number of content words for each inauguration.
content.sum <- with(sentence.list, tapply(content.num, list(President, Term), sum))
content.sum <- as.data.frame(t(as.matrix(content.sum)))
for(i in 1:nrow(speech.list)){
nm <- speech.list$President[i]
s <- speech.list$Term[i]
speech.list$content.num[i] <- content.sum[nm][s,1]
}
speech.list$content.rate <- speech.list$content.num/speech.list$Words
View(sentence.list)
ggplot(data = sentence.list) +
geom_point(mapping = aes(x = sent.id, y = content.rate))
ggplot(data = sentence.list) +
geom_histogram(aes(x = content.rate, y = ..density..))
famous <- c("Barack Obama", "George W. Bush", "Abraham Lincoln", "Ronald Reagan")
new.sent <- sentence.list[sentence.list$President %in% famous,]
View(new.sent)
View(speech.list)
age <- read.csv("../data/Age.csv", header = TRUE)
age <- ldply(age, data.frame)
speech.list$Age <- age$X..i..
data0 <- data.frame(age = speech.list$Age, words = speech.list$Words, cont.num = speech.list$content.num, cont.rate = speech.list$content.rate)
rownames(data0) <- paste(speech.list$President, speech.list$Term, sep = "-Term")
for(i in 1:nrow(speech.list)){
data0$sent.num[i] <- max(sentence.list$sent.id[sentence.list$President == speech.list$President[i] & sentence.list$Term == speech.list$Term[i]])
}
data0$party <- speech.list$Party
data0$term <- speech.list$Term
data0 <- data0[data0$sent.num > 50, ]
lm0 <- lm(age~words+cont.num+cont.rate+as.factor(party)+I(words/term)+I(sent.num^2)+I(sent.num^3), data = data0)
sqrt(mean((residuals(lm0)^2)))
summary(lm0)
famous <- c("Barack Obama", "George W. Bush", "Abraham Lincoln", "Ronald Reagan")
new.sent <- sentence.list[sentence.list$President %in% famous,]
ggplot(data = sentence.list) +
geom_histogram(aes(x = content.rate, y = ..density..))
View(new.sent)
View(speech.list)
View(sentence.list)
View(data0)
ggplot(data = new.sent) +
geom_histogram(aes(x = content.rate, y = ..density..))
ggplot(data = new.sent) +
geom_histogram(aes(x = content.rate, y = ..density..)) +
facet_wrap(~ President+Term, ncol = 2)
ggplot(data = new.sent) +
geom_histogram(aes(x = content.rate, y = ..density..)) +
stat_density(geom='line',position='identity',size=1.5, aes(colour=factor(President))) +
facet_wrap(~ President+Term, ncol = 2)
ggplot(data = new.sent) +
geom_histogram(aes(x = content.rate, y = ..density..)) +
stat_density(geom='line', position='identity', size=1.5, aes(colour=factor(President))) +
facet_wrap(~ President+Term, ncol = 2)
P <- ggplot(new.sent, aes(x = content.rate))
P + geom_histogram(aes(fill=factor(President),y=..density..), alpha=0.3,colour='black')+ stat_density(geom='line',position='identity',size=1.5, aes(colour=factor(President)))+
facet_wrap(~President+Term,ncol=2)
P <- ggplot(new.sent, aes(x = content.rate))
P + geom_histogram(aes(fill=factor(President),y=..density..), alpha=0.3,colour='black')+ stat_density(geom='line',position='identity',size=1.5, aes(colour=factor(President)))+
facet_wrap(~President+Term,ncol=2)
famous <- c("Barack Obama", "George W. Bush", "Abraham Lincoln", "Ronald Reagan")
new.sent <- sentence.list[sentence.list$President %in% famous,]
ggplot(data = new.sent) +
geom_histogram(aes(x = content.rate, y = ..density..)) +
stat_density(geom='line', position='identity', size=1.5, aes(colour=factor(President))) +
facet_wrap(~ President+Term, ncol = 2)
P <- ggplot(new.sent, aes(x = content.rate))
P + geom_histogram(aes(fill=factor(President),y=..density..), alpha=0.3,colour='black')+ stat_density(geom='line',position='identity',size=1.5, aes(colour=factor(President)))+
facet_wrap(~President+Term,ncol=2)
p <- ggplot(new.sent, aes(President,content.rate,fill=President))
p + geom_boxplot()
p + geom_violin(alpha=0.3,width=0.9)+
geom_jitter(shape=21)
# Histgram of four president each 2 terms.
P <- ggplot(new.sent, aes(x = content.rate))
P + geom_histogram(aes(fill=factor(President),y=..density..), alpha=0.3,colour='black')+ stat_density(geom='line',position='identity',size=1.5, aes(colour=factor(President)))+
facet_wrap(~President+Term,ncol=2)
p <- ggplot(new.sent, aes(President,content.rate,fill=President))
p + geom_violin(alpha=0.3,width=0.9)+
geom_jitter(shape=21)
P <- ggplot(new.sent, aes(x = content.rate))
P + geom_histogram(aes(fill=factor(President),y=..density..), alpha=0.3,colour='black')+        stat_density(geom='line',position='identity',size=1.5, aes(colour=factor(President)))+
facet_wrap(~President+Term,ncol=2)
p <- ggplot(new.sent, aes(President,content.rate,fill=President))
p + geom_violin(alpha=0.3,width=0.9)+
geom_jitter(shape=21)+
facet_wrap(~President,ncol=2)
p <- ggplot(new.sent, aes(President,content.rate,fill=President))
p + geom_violin(alpha=0.3,width=0.9)+
geom_jitter(shape=21)+
facet_wrap(~President+Term,ncol=2)
p <- ggplot(new.sent, aes(President,content.rate,fill=President))
p + geom_violin(alpha=0.3,width=0.9)+
geom_jitter(shape=21)+
facet_wrap(~President,ncol=2)
p <- ggplot(new.sent, aes(Term,content.rate,fill=President))
p + geom_violin(alpha=0.3,width=0.9)+
geom_jitter(shape=21)+
facet_wrap(~President,ncol=2)
p <- ggplot(new.sent, aes(President+Term,content.rate,fill=President))
p + geom_violin(alpha=0.3,width=0.9)+
geom_jitter(shape=21)+
facet_wrap(~President,ncol=2)
p <- ggplot(new.sent, aes(President,content.rate,fill=President))
p <- ggplot(new.sent, aes(President,content.rate,fill=President))
p + geom_violin(alpha=0.3,width=0.9)+
geom_jitter(shape=21)+
facet_wrap(~President,ncol=2)
p <- ggplot(new.sent, aes(President,content.rate,fill=President))
p + geom_violin(alpha=0.3,width=0.9)+
geom_jitter(shape=21)
new.speech <- speech.list[speech.list$President %in% famous,]
View(new.speech)
famous <- c("Barack Obama", "George W. Bush", "Abraham Lincoln", "George Washington")
new.sent <- sentence.list[sentence.list$President %in% famous,]
new.speech <- speech.list[speech.list$President %in% famous,]
# Histgram
P <- ggplot(new.sent, aes(x = content.rate))
P + geom_histogram(aes(fill=factor(President),y=..density..), alpha=0.3,colour='black')+        stat_density(geom='line',position='identity',size=1.5, aes(colour=factor(President)))+
facet_wrap(~President+Term,ncol=2)
# Boxplot
p <- ggplot(new.sent, aes(President,content.rate,fill=President))
p + geom_violin(alpha=0.3,width=0.9)+
geom_jitter(shape=21)
famous <- c("Barack Obama", "George W. Bush", "Abraham Lincoln", "Ronald Reagan")
famous <- c("Barack Obama", "George W. Bush", "Abraham Lincoln", "Ronald Reagan")
new.sent <- sentence.list[sentence.list$President %in% famous,]
new.speech <- speech.list[speech.list$President %in% famous,]
# Histgram
P <- ggplot(new.sent, aes(x = content.rate))
P + geom_histogram(aes(fill=factor(President),y=..density..), alpha=0.3,colour='black')+        stat_density(geom='line',position='identity',size=1.5, aes(colour=factor(President)))+
facet_wrap(~President+Term,ncol=2)
# Boxplot
p <- ggplot(new.sent, aes(President,content.rate,fill=President))
p + geom_violin(alpha=0.3,width=0.9)+
geom_jitter(shape=21)
sentence.list$sentences[sentence.list$content.num == 0]
lexical_classification("It will be ever thus")
sentence.list$sentences[sentence.list$content.rate == 1]
obama <- sentence.list[sentence.list$President == "Barack Obama",]
bush <- sentence.list[sentence.list$President == "George W. Bush",]
lincoln <- sentence.list[sentence.list$President == "Abraham Lincoln",]
reagan <- sentence.list[sentence.list$President == "Ronald Reagan",]
par(mfrow = c(4,1))
p <- ggplot(lincoln, aes(Term, content.rate, fill=Term))
p+geom_boxplot()
p <- ggplot(reagan, aes(Term, content.rate, fill=Term))
p+geom_boxplot()
p <- ggplot(bush, aes(Term, content.rate, fill=Term))
p+geom_boxplot()
p <- ggplot(obama, aes(Term, content.rate, fill=Term))
p+geom_boxplot()
View(obama)
p <- ggplot(lincoln, aes(Term, content.rate, fill=Term))
p+geom_boxplot()
# Boxplot - President
p <- ggplot(new.sent, aes(President,content.rate,fill=President))
p + geom_violin(alpha=0.3,width=0.9)+
geom_jitter(shape=21)
p <- ggplot(lincoln, aes(factor(Term), content.rate, fill=Term))
p+geom_boxplot()
ggplot(lincoln, aes(factor(Term), content.rate, fill=Term)) + geom_boxplot()
ggplot(reagan, aes(factor(Term), content.rate, fill=Term)) + geom_boxplot()
ggplot(bush, aes(factor(Term), content.rate, fill=Term)) + geom_boxplot()
ggplot(obama, aes(factor(Term), content.rate, fill=Term)) + geom_boxplot()
ggplot(lincoln, aes(x = Term, content.rate, fill=Term)) + geom_boxplot()
ggplot(lincoln, aes(factor(Term), content.rate, fill=Term)) + geom_boxplot()
ggplot(lincoln, aes(factor(Term), content.rate)) + geom_boxplot()
ggplot(bush, aes(factor(Term), content.rate, fill="red")) + geom_boxplot()
ggplot(bush, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot()
ggplot(lincoln, aes(factor(Term), content.rate), fill=factor(Term)) + geom_boxplot()
ggplot(lincoln, aes(factor(Term), content.rate), fill=factor(Term)) + geom_boxplot()
ggplot(bush, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot()
ggplot(lincoln, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot()
ggplot(reagan, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot()
ggplot(new.sent, aes(x = sent.id, y = content.rate)) +geom_line()+facet_grid(President+Term~.)
?geom_line
ggplot(new.sent, aes(x = sent.id, y = content.rate，color = President)) +geom_line()+facet_grid(President+Term~.)
ggplot(new.sent[new.sent$Term == 1], aes(x = sent.id, y = content.rate，color = President)) +geom_line()+facet_grid(President+Term~.)
ggplot(new.sent[new.sent$Term == 1,], aes(x = sent.id, y = content.rate，color = President)) +geom_line()+facet_grid(President+Term~.)
p1 <- ggplot(lincoln, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot()
p2 <- ggplot(reagan, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot()
p3 <- ggplot(bush, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot()
p4 <- ggplot(obama, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot()
grid.arrange(p1,p2,p3,p4, ncol=2, nrow=2, widths=c(4,1), heights=c(1,4))
library(gridExtra)
library(grid)
library("gridExtra")
library("grid")
library("lattice")
p1 <- ggplot(lincoln, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot()
p2 <- ggplot(reagan, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot()
p3 <- ggplot(bush, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot()
p4 <- ggplot(obama, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot()
grid.arrange(p1,p2,p3,p4, ncol=2, nrow=2, widths=c(4,1), heights=c(1,4))
grid.arrange(p1,p2,p3,p4, ncol=2, nrow=2)
p1 <- ggplot(lincoln, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Abraham Lincoln")
p2 <- ggplot(reagan, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Ronald Reagan")
p3 <- ggplot(bush, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("George W. Bush")
p4 <- ggplot(obama, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Barack Obama")
grid.arrange(p1,p2,p3,p4, ncol=2, nrow=2)
p1 <- ggplot(lincoln, aes(factor(Term), content.rate, fill=1)) + geom_boxplot() + xlab("Abraham Lincoln")
p1
p1 <- ggplot(lincoln, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Abraham Lincoln") + xlim(0.25, 0.75)
p2 <- ggplot(reagan, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Ronald Reagan") + xlim(0.25, 0.75)
p3 <- ggplot(bush, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("George W. Bush") + xlim(0.25, 0.75)
p4 <- ggplot(obama, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Barack Obama") + xlim(0.25, 0.75)
grid.arrange(p1,p2,p3,p4, ncol=2, nrow=2)
p1 <- ggplot(lincoln, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Abraham Lincoln") + ylim(0.25, 0.75)
p2 <- ggplot(reagan, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Ronald Reagan") + ylim(0.25, 0.75)
p3 <- ggplot(bush, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("George W. Bush") + ylim(0.25, 0.75)
p4 <- ggplot(obama, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Barack Obama") + ylim(0.25, 0.75)
grid.arrange(p1,p2,p3,p4, ncol=2, nrow=2)
knitr::opts_chunk$set(echo = TRUE)
library("ggplot2")
library("plyr")
library("rvest")
library("tibble")
library("qdap")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RANN")
library("tm")
library("NLP")
library("openNLP")
library("gridExtra")
library("grid")
library("lattice")
source("../lib/plotstacked.R")
source("../lib/speechFuncs.R")
### Inauguaral speeches
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
speech.url=f.speechlinks(main.page)
#head(inaug)
as.Date(speech.url[,1], format="%B %e, %Y")
speech.url=speech.url[-nrow(speech.url),] # remove the last line, irrelevant due to error.
speech.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
speech.list=cbind(speech.list, speech.url)
# Loop over each row in speech.list
speech.list$fulltext=NA
for(i in seq(nrow(speech.list))) {
text <- read_html(speech.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>% # isloate the text
html_text() # get the text
speech.list$fulltext[i]=text
# Create the file name
filename <- paste0("../data/fulltext/",
speech.list$type[i],
speech.list$File[i], "-",
speech.list$Term[i], ".txt")
sink(file = filename) %>% # open file to write
cat(text)  # write the file
sink() # close the file
}
speech.list <- speech.list[,c(-2,-5,-7,-9)]
colnames(speech.list)[1] <- "President"
colnames(speech.list)[5] <- "Date"
sentence.list=NULL
for(i in 1:nrow(speech.list)){
sentences=sent_detect(speech.list$fulltext[i],
endmarks = c("?", ".", "!", "|",";"))
if(length(sentences)>0){
word.count=word_count(sentences)
sentence.list=rbind(sentence.list,
cbind(speech.list[i,-ncol(speech.list)],
sentences=as.character(sentences),
word.count,
sent.id=1:length(sentences)
)
)
}
}
sentence.list <-  sentence.list %>% filter(!is.na(word.count))
# Combine president name and term.
nms.pre <- paste(speech.list$President, speech.list$Term, sep = "-Term")
lexical.rate <- function(s){
t <- vector("numeric", length(s))
for(i in 1:length(t)){
t[i] <-  lexical_classification(s[i])[[4]]$ave.content.rate/100
}
return(t)
}
lexical.num <- function(s){
t <- vector("numeric", length(s))
for(i in 1:length(t)){
t[i] <-  lexical_classification(s[i])[[4]]$n.content
}
return(t)
}
# Get the number and rate of content words for each sentences.
sentence.list$content.rate <- lexical.rate(sentence.list$sentences)
sentence.list$content.num <- lexical.num(sentence.list$sentences)
# Get the number of content words for each inauguration.
content.sum <- with(sentence.list, tapply(content.num, list(President, Term), sum))
content.sum <- as.data.frame(t(as.matrix(content.sum)))
for(i in 1:nrow(speech.list)){
nm <- speech.list$President[i]
s <- speech.list$Term[i]
speech.list$content.num[i] <- content.sum[nm][s,1]
}
speech.list$content.rate <- speech.list$content.num/speech.list$Words
famous <- c("Barack Obama", "George W. Bush", "Abraham Lincoln", "Ronald Reagan")
new.sent <- sentence.list[sentence.list$President %in% famous,]
new.speech <- speech.list[speech.list$President %in% famous,]
obama <- sentence.list[sentence.list$President == "Barack Obama",]
bush <- sentence.list[sentence.list$President == "George W. Bush",]
lincoln <- sentence.list[sentence.list$President == "Abraham Lincoln",]
reagan <- sentence.list[sentence.list$President == "Ronald Reagan",]
# Lines
ggplot(new.sent[new.sent$Term == 1,], aes(x = sent.id, y = content.rate,color = President)) +geom_line()+facet_grid(President+Term~.)
# Histgram
ggplot(new.sent, aes(x = content.rate)) +
geom_histogram(aes(fill=factor(President),y=..density..), alpha=0.3,colour='black')+         stat_density(geom='line',position='identity',size=1.5, aes(colour=factor(President)))+
facet_wrap(~President+Term,ncol=2)
# Boxplot - President
ggplot(new.sent, aes(President,content.rate,fill=President)) +
geom_violin(alpha=0.3,width=0.9)+
geom_jitter(shape=21)
# Boxplot - Term
p1 <- ggplot(lincoln, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Abraham Lincoln") + ylim(0.25, 0.75)
p2 <- ggplot(reagan, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Ronald Reagan") + ylim(0.25, 0.75)
p3 <- ggplot(bush, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("George W. Bush") + ylim(0.25, 0.75)
p4 <- ggplot(obama, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Barack Obama") + ylim(0.25, 0.75)
grid.arrange(p1,p2,p3,p4, ncol=2, nrow=2)
p1 <- ggplot(lincoln, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Abraham Lincoln") + ylim(0.3, 0.5)
p2 <- ggplot(reagan, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Ronald Reagan") + ylim(0.3, 0.5)
p3 <- ggplot(bush, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("George W. Bush") + ylim(0.3, 0.5)
p4 <- ggplot(obama, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Barack Obama") + ylim(0.3, 0.5)
grid.arrange(p1,p2,p3,p4, ncol=2, nrow=2)
sum(speech.list$content.num)/sum(speech.list$Words)
var(speech.list$content.rate)
View(sentence.list)
View(sentence.list)
View(speech.list)
tapply(speech.list$content.num, speech.list$Party, sum)
tapply(speech.list$Words, speech.list$Party, sum)
q <- as.vector( tapply(speech.list$content.num, speech.list$Party, sum))
q <- as.vector( tapply(speech.list$Words, speech.list$Party, sum))
w <- as.vector( tapply(speech.list$content.num, speech.list$Party, sum))
w/q
famous <- c("Barack Obama", "George W. Bush", "Abraham Lincoln", "Ronald Reagan")
new.sent <- sentence.list[sentence.list$President %in% famous,]
new.speech <- speech.list[speech.list$President %in% famous,]
obama <- sentence.list[sentence.list$President == "Barack Obama",]
bush <- sentence.list[sentence.list$President == "George W. Bush",]
lincoln <- sentence.list[sentence.list$President == "Abraham Lincoln",]
reagan <- sentence.list[sentence.list$President == "Ronald Reagan",]
# Lines
ggplot(new.sent[new.sent$Term == 1,], aes(x = sent.id, y = content.rate,color = President)) +geom_line()+facet_grid(President+Term~.)
# Histgram
ggplot(new.sent, aes(x = content.rate)) +
geom_histogram(aes(fill=factor(President),y=..density..), alpha=0.3,colour='black')+         stat_density(geom='line',position='identity',size=1.5, aes(colour=factor(President)))+
facet_wrap(~President+Term,ncol=2)
# Boxplot - President
ggplot(new.sent, aes(President,content.rate,fill=President)) +
geom_violin(alpha=0.3,width=0.9)+
geom_jitter(shape=21)
# Boxplot - Term
p1 <- ggplot(lincoln, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Abraham Lincoln") + ylim(0.3, 0.5)
p2 <- ggplot(reagan, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Ronald Reagan") + ylim(0.3, 0.5)
p3 <- ggplot(bush, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("George W. Bush") + ylim(0.3, 0.5)
p4 <- ggplot(obama, aes(factor(Term), content.rate, fill=factor(Term))) + geom_boxplot() + xlab("Barack Obama") + ylim(0.3, 0.5)
grid.arrange(p1,p2,p3,p4, ncol=2, nrow=2)
sum(speech.list$Term >1)
age <- read.csv("../data/Age.csv", header = TRUE) # Use my own csv which contains ages of presidents when they gave their inaugurations.
age <- ldply(age, data.frame)
speech.list$Age <- age$X..i..
data0 <- data.frame(age = speech.list$Age, words = speech.list$Words, cont.num = speech.list$content.num, cont.rate = speech.list$content.rate)
rownames(data0) <- paste(speech.list$President, speech.list$Term, sep = "-Term")
for(i in 1:nrow(speech.list)){
data0$sent.num[i] <- max(sentence.list$sent.id[sentence.list$President == speech.list$President[i] & sentence.list$Term == speech.list$Term[i]])
}
data0$party <- speech.list$Party
data0$term <- speech.list$Term
data0 <- data0[data0$sent.num > 50, ]
lm0 <- lm(age~words+cont.num+cont.rate+as.factor(party)+I(words/term)+I(sent.num^2)+I(sent.num^3), data = data0)
sqrt(mean((residuals(lm0)^2)))
summary(lm0)
cat("RMSE is", sqrt(mean((residuals(lm0)^2))))
lm0 <- lm(age~words+cont.num+cont.rate+as.factor(party)+I(words/term)+I(sent.num^2)+I(sent.num^3)+I(words/sent.num), data = data0)
cat("RMSE is", sqrt(mean((residuals(lm0)^2))))
summary(lm0)
